{"ast":null,"code":"var _jsxFileName = \"/Users/oleksiimarchenko/Documents/React/webinars/webinar  26-09-2020/Project/Packman/src/components/Board/Board.js\";\nimport React, { Component } from \"react\";\nimport Pacman from \"../Pacman\";\nimport Ghost from \"../Ghost\";\nimport Food from \"../Food\";\nimport \"./style.css\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      packmanPosition: {\n        top: 0,\n        left: 0\n      },\n      ghostPosition: {\n        top: 0,\n        left: 0\n      }\n    };\n\n    this.lookForEat = () => {\n      const pacmanX = this.pacmanRef.current.state.position.left;\n      const pacmanY = this.pacmanRef.current.state.position.top;\n      const pacmanSize = this.pacmanRef.current.props.size;\n      const pacmanLastX = pacmanX + pacmanSize / 2;\n      const pacmanLastY = pacmanY + pacmanSize / 2;\n\n      for (let i = 0; i <= this.amountOfFood; i++) {\n        const currentFood = this[\"food\" + i].current;\n\n        if (currentFood) {\n          const currentFoodX = currentFood.state.position.left;\n          const currentFoodY = currentFood.state.position.top;\n          const currentFoodSize = currentFood.props.foodSize;\n          const currentFoodLastX = currentFoodX + currentFoodSize / 2;\n          const currentFoodLastY = currentFoodY + currentFoodSize / 2;\n\n          if (pacmanX >= currentFoodX && pacmanX <= currentFoodLastX || pacmanLastX >= currentFoodX && pacmanLastX <= currentFoodLastX) {\n            if (pacmanY >= currentFoodY && pacmanY <= currentFoodLastY || pacmanLastY >= currentFoodY && pacmanLastY <= currentFoodLastY) {\n              if (!currentFood.state.hidden) {\n                currentFood.ate();\n                this.props.setScore(value => value + 1);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    this.getPackmanPosition = (top, left) => {\n      this.setState({\n        packmanPosition: {\n          top: top,\n          left: left\n        }\n      }, console.log(\"packman in parent\", this.state.packmanPosition));\n    };\n\n    this.getGhostPosition = (top, left) => {\n      this.setState({\n        ghostPosition: {\n          top: top,\n          left: left\n        }\n      }, console.log(\"ghost in parent\", this.state.ghostPosition));\n    };\n\n    this.pacmanRef = React.createRef();\n    this.foods = [];\n    this.amountOfFood = (window.innerWidth - this.props.foodSize) * (window.innerHeight - this.props.topScoreBoardHeight) / (this.props.foodSize * this.props.foodSize) - 1;\n\n    for (let i = 0; i < this.amountOfFood; i++) {\n      this[\"food\" + i] = React.createRef();\n    }\n  }\n\n  componentDidMount() {\n    this.intervalFood = setInterval(this.lookForEat, 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalFood);\n  }\n\n  render() {\n    const {\n      foodSize,\n      border,\n      topScoreBoardHeight\n    } = this.props;\n    let foods = [];\n    let currentTop = 0;\n    let currentLeft = 1 * foodSize;\n\n    for (let i = 0; i < this.amountOfFood; i++) {\n      if (currentLeft + foodSize >= window.innerWidth - border) {\n        currentTop += this.props.foodSize;\n        currentLeft = 0;\n      }\n\n      if (currentTop + foodSize >= window.innerHeight - border - topScoreBoardHeight) {\n        break;\n      }\n\n      const position = {\n        left: currentLeft,\n        top: currentTop\n      };\n      currentLeft += foodSize;\n      foods.push( /*#__PURE__*/React.createElement(Food, {\n        key: `food-elem-${i}`,\n        position: position,\n        ref: this[\"food\" + i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, foods, /*#__PURE__*/React.createElement(Pacman, {\n      ref: this.pacmanRef,\n      getPackmanPosition: this.getPackmanPosition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Ghost, {\n      color: \"blue\",\n      getGhosPosition: this.getPackmanPosition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // TODO: refactor and move to config\n\n\nBoard.defaultProps = {\n  foodSize: 50,\n  border: 10 * 2,\n  topScoreBoardHeight: 50\n};\nexport default Board;","map":{"version":3,"sources":["/Users/oleksiimarchenko/Documents/React/webinars/webinar  26-09-2020/Project/Packman/src/components/Board/Board.js"],"names":["React","Component","Pacman","Ghost","Food","Board","constructor","props","state","packmanPosition","top","left","ghostPosition","lookForEat","pacmanX","pacmanRef","current","position","pacmanY","pacmanSize","size","pacmanLastX","pacmanLastY","i","amountOfFood","currentFood","currentFoodX","currentFoodY","currentFoodSize","foodSize","currentFoodLastX","currentFoodLastY","hidden","ate","setScore","value","getPackmanPosition","setState","console","log","getGhostPosition","createRef","foods","window","innerWidth","innerHeight","topScoreBoardHeight","componentDidMount","intervalFood","setInterval","componentWillUnmount","clearInterval","render","border","currentTop","currentLeft","push","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Pacman from \"../Pacman\";\nimport Ghost from \"../Ghost\";\nimport Food from \"../Food\";\nimport \"./style.css\";\n\nclass Board extends Component {\n  state = {\n    packmanPosition: {\n      top: 0,\n      left: 0,\n    },\n    ghostPosition: {\n      top: 0,\n      left: 0,\n    },\n  };\n  constructor(props) {\n    super(props);\n    this.pacmanRef = React.createRef();\n\n    this.foods = [];\n    this.amountOfFood =\n      ((window.innerWidth - this.props.foodSize) *\n        (window.innerHeight - this.props.topScoreBoardHeight)) /\n        (this.props.foodSize * this.props.foodSize) -\n      1;\n    for (let i = 0; i < this.amountOfFood; i++) {\n      this[\"food\" + i] = React.createRef();\n    }\n  }\n\n  componentDidMount() {\n    this.intervalFood = setInterval(this.lookForEat, 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalFood);\n  }\n\n  lookForEat = () => {\n    const pacmanX = this.pacmanRef.current.state.position.left;\n    const pacmanY = this.pacmanRef.current.state.position.top;\n    const pacmanSize = this.pacmanRef.current.props.size;\n\n    const pacmanLastX = pacmanX + pacmanSize / 2;\n    const pacmanLastY = pacmanY + pacmanSize / 2;\n\n    for (let i = 0; i <= this.amountOfFood; i++) {\n      const currentFood = this[\"food\" + i].current;\n      if (currentFood) {\n        const currentFoodX = currentFood.state.position.left;\n        const currentFoodY = currentFood.state.position.top;\n        const currentFoodSize = currentFood.props.foodSize;\n        const currentFoodLastX = currentFoodX + currentFoodSize / 2;\n        const currentFoodLastY = currentFoodY + currentFoodSize / 2;\n\n        if (\n          (pacmanX >= currentFoodX && pacmanX <= currentFoodLastX) ||\n          (pacmanLastX >= currentFoodX && pacmanLastX <= currentFoodLastX)\n        ) {\n          if (\n            (pacmanY >= currentFoodY && pacmanY <= currentFoodLastY) ||\n            (pacmanLastY >= currentFoodY && pacmanLastY <= currentFoodLastY)\n          ) {\n            if (!currentFood.state.hidden) {\n              currentFood.ate();\n              this.props.setScore((value) => value + 1);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  getPackmanPosition = (top, left) => {\n    this.setState(\n      {\n        packmanPosition: {\n          top: top,\n          left: left,\n        },\n      },\n      console.log(\"packman in parent\",this.state.packmanPosition)\n    );\n  };\n  getGhostPosition = (top, left) => {\n    this.setState(\n      {\n        ghostPosition: {\n          top: top,\n          left: left,\n        },\n      },\n      console.log(\"ghost in parent\",this.state.ghostPosition)\n    );\n  };\n  render() {\n    const { foodSize, border, topScoreBoardHeight } = this.props;\n    let foods = [];\n    let currentTop = 0;\n    let currentLeft = 1 * foodSize;\n    for (let i = 0; i < this.amountOfFood; i++) {\n      if (currentLeft + foodSize >= window.innerWidth - border) {\n        currentTop += this.props.foodSize;\n        currentLeft = 0;\n      }\n\n      if (\n        currentTop + foodSize >=\n        window.innerHeight - border - topScoreBoardHeight\n      ) {\n        break;\n      }\n\n      const position = { left: currentLeft, top: currentTop };\n      currentLeft += foodSize;\n      foods.push(\n        <Food\n          key={`food-elem-${i}`}\n          position={position}\n          ref={this[\"food\" + i]}\n        />\n      );\n    }\n\n    return (\n      <div className=\"board\">\n        {foods}\n        <Pacman\n          ref={this.pacmanRef}\n          getPackmanPosition={this.getPackmanPosition}\n        />\n        <Ghost color=\"blue\"\n        getGhosPosition={this.getPackmanPosition} />\n      </div>\n    );\n  }\n}\n\n// TODO: refactor and move to config\nBoard.defaultProps = {\n  foodSize: 50,\n  border: 10 * 2,\n  topScoreBoardHeight: 50,\n};\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}